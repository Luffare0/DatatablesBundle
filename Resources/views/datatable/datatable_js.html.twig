{##
 # This file is part of the SgDatatablesBundle package.
 #
 # (c) stwe <https://github.com/stwe/DatatablesBundle>
 #
 # For the full copyright and license information, please view the LICENSE
 # file that was distributed with this source code.
 #}

module.exports = {
    initialiseDatatable() {

    const selector = "#sg-datatables-{{ sg_datatables_view.name }}";
    let oTable;

    let defaults = {
    };

    let language = {
    {% include 'SgDatatablesBundle:datatable:language.html.twig' %}
    };

    let ajax = {
    {% include 'SgDatatablesBundle:datatable:ajax.html.twig' %}
    };

    let options = {
    {% include 'SgDatatablesBundle:datatable:options.html.twig' %}
    };

    let features = {
    {% include 'SgDatatablesBundle:datatable:features.html.twig' %}
    };

    let callbacks = {
    {% include 'SgDatatablesBundle:datatable:callbacks.html.twig' %}
    };

    let extensions = {
    {% include 'SgDatatablesBundle:datatable:extensions.html.twig' %}
    };

    let columns = {
    {% include 'SgDatatablesBundle:datatable:columns.html.twig' %}
    };

    let initialSearch = {
    {% include 'SgDatatablesBundle:datatable:initial_search.html.twig' %}
    };

    function postCreateDatatable(pipeline) {
    {% for column in sg_datatables_view.columnBuilder.columns %}
        {% if column.renderPostCreateDatatableJsContent is not null %}
            {{ column.renderPostCreateDatatableJsContent|raw }}
        {% endif %}
    {% endfor %}
    }

    function createDatatable() {
    $.extend(defaults, language);
    $.extend(defaults, ajax);
    $.extend(defaults, options);
    $.extend(defaults, features);
    $.extend(defaults, callbacks);
    $.extend(defaults, extensions);
    $.extend(defaults, columns);
    $.extend(defaults, initialSearch);

    if (!$.fn.dataTable.isDataTable(selector)) {
    $(selector)
    {% include 'SgDatatablesBundle:datatable:events.html.twig' %}
    ;

    oTable = $(selector)
    .DataTable(defaults)
    .on('draw.dt', function() { postCreateDatatable({{ sg_datatables_view.ajax.pipeline }}) })
    ;

    {% if true == sg_datatables_view.options.individualFiltering %}
        {% include 'SgDatatablesBundle:datatable:search.js.twig' %}
    {% endif %}
    }
    }

    createDatatable();

    {% if sg_datatables_view.columnBuilder.uniqueColumn('multiselect') is not null %}
        {{ sg_datatables_render_multiselect_actions( sg_datatables_view.columnBuilder.uniqueColumn('multiselect'), sg_datatables_view.ajax.pipeline) }}
    {% endif %}
}
};
